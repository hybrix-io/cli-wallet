stages:
 - build
 - release

interface:
  image: node:8.14.0-stretch
  stage: build
  script:
    - apt-get update
    - apt-get install unzip
    - init
    
    # compile in release mode (uglified and minified)
    - ./scripts/npm/compile.sh
    
    # extract dist
    - shopt -s extglob
    - rm -rf !(dist) || true
    - dist
    
    # create a .version file
    - timestamp=$(date -u '+%Y-%m-%dT%H:%M:%S+00:00')
    - mode=release
    - echo "{\"${CI_PROJECT_PATH_SLUG}\":{\"mode\":\"${mode}\", \"project_path\":\"${CI_PROJECT_PATH}\", \"commit_ref_name\":\"${CI_COMMIT_REF_NAME}\", \"commit_ref_slug\":\"${CI_COMMIT_REF_SLUG}\", \"commit_sha\":\"${CI_COMMIT_SHA}\", \"pipeline_url\":\"${CI_PIPELINE_URL}\", \"packaged\":\"${timestamp}\"}}" > .version

  artifacts:
    paths:
    - ./*

dist: 
  image: node:8.14.0-stretch
  stage: release
  script:
  # install the packages that we need
  - apt-get update
  - apt-get -y install curl
  - apt-get -y install git
  - apt-get -y install tar
  - apt-get -y install xz-utils
  - apt-get -y install zip
  
  - init 
  
  # compile in release mode (uglified and minified)
  - ./scripts/npm/compile.sh
    
  # extract dist
  - shopt -s extglob
  - rm -rf !(dist) || true
  - dist
  
  # set variables
  # version -> branchname without '-release'
  - version=${CI_COMMIT_REF_NAME/-release/}
  - component=cli-wallet
  - file=hybrixd.${component}.${version}
  - path=cli-wallet/${version}/
  
  - ls 
  - cp -r ./dist/. /tmp/${component}/
  #- cp -r . /tmp/${component}/
    
  - cd /tmp
  - git clone --depth=1 https://oauth2:${PRIVATE_TOKEN}@gitlab.com/hybrix/dist
  - mkdir -p ./dist/cli-wallet/${version}/
  
  # download [interface] artifact
  #- "curl --location --header \"JOB-TOKEN: $CI_JOB_TOKEN\" \"https://gitlab.com/api/v4/projects/hybrix%2Fhybrixd%2Finterface/jobs/artifacts/${CI_COMMIT_REF_NAME}/download?job=interface\" -o ${path}${file}.zip"
  
  # go to folder
  #- ls ./dist/${path}
  
  #- cp ${path}${file}.zip ./../${file}.zip
  #- unzip ${file}.zip -d ${component}
  
  - ls
  - ls ${component}
  
  - zip -r ${file}.zip ${component}/.
  - tar -zcvf ${file}.tar.gz ${component}/.
  - tar cfJ ${file}.tar.xz ${component}/.
  
  - cp ${file}.zip ./dist/${path}${file}.zip
  - cp ${file}.tar.gz ./dist/${path}${file}.tar.gz
  - cp ${file}.tar.xz ./dist/${path}${file}.tar.xz
  
  # for interface we like to distribute the js files directly as well
  # - cp -r ./${component}/*.js ./dist/${path}
  - cd ./dist/
  
  # configure git-user
  - "git config --global user.name \"${GITLAB_USER_NAME}\""
  - "git config --global user.email \"${GITLAB_USER_EMAIL}\""
  
  # add, commit and push
  - "git add ."
  - "git commit -m \"release ${version} ${component}\" || true"
  - "git push https://oauth2:${PRIVATE_TOKEN}@gitlab.com/hybrix/dist -f || true"

  #only:
    #refs:
      #- tags
  ##- /^v.*release$/

# ---------------------------------------------------------------------------

.auto_devops: &auto_devops |
  # Auto DevOps variables and functions

  function init() {
    npm install -g jsdoc
    
    # trigger pipeline common
    # "curl --request POST --form \"token=$CI_JOB_TOKEN\" --form ref=master https://gitlab.com/api/v4/projects/hybrix%2Fhybrixd%2Fcommon/trigger/pipeline"
    
    # download [common] artifact
    #- "curl --location --header \"JOB-TOKEN: $CI_JOB_TOKEN\" \"https://gitlab.com/api/v4/projects/hybrix%2Fhybrixd%2Fcommon/jobs/artifacts/master/download?job=common\" -o artifacts-common.zip"
    
    # download common repo
    curl --location --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/hybrix%2Fhybrixd%2Fcommon/jobs/artifacts/master/download?job=common" -o artifacts-common.zip
    
    # remove link to common and unzip the downloaded artifact to the directory (|| true --> on error, no problem)
    rm -rf  common || true
    unzip -q -o artifacts-common.zip -d common
    
    # remove the zip-file (|| true --> on error, no problem)
    rm -rf  artifacts-common.zip || true
    
    # download interface repo
    curl --location --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://gitlab.com/api/v4/projects/hybrix%2Fhybrixd%2Finterface/jobs/artifacts/master/download?job=interface" -o artifacts-interface.zip
    
    # remove link to interface and unzip the downloaded artifact to the directory (|| true --> on error, no problem)
    rm -rf  interface || true
    unzip -q -o artifacts-interface.zip -d interface
    
    # remove the zip-file (|| true --> on error, no problem)
    rm -rf  artifacts-interface.zip || true
    
    # remove symbolic link to node
    rm -rf  node || true
    # don't download git clone https://github.com/internetofcoins/nodejs-v8-lts.git, refer to docker pre installed nodejs as defined in the first line of this file
    ln -s "$(which nodejs)" node
  }
  
  function dist() {
    # clean up and prepare the artifacts (instead of having a dist)
    mv ./dist/* ./
    rm -rf ./dist || true
    
    # remove .git directory and .* files
    rm -rf ./.git* || true
  }

before_script:
  - *auto_devops